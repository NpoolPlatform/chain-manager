// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"

	"github.com/NpoolPlatform/chain-manager/pkg/db/ent/schema"
	"github.com/NpoolPlatform/chain-manager/pkg/db/ent/tran"
	"github.com/google/uuid"
	"github.com/shopspring/decimal"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	tranMixin := schema.Tran{}.Mixin()
	tran.Policy = privacy.NewPolicies(tranMixin[0], schema.Tran{})
	tran.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := tran.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	tranMixinFields0 := tranMixin[0].Fields()
	_ = tranMixinFields0
	tranFields := schema.Tran{}.Fields()
	_ = tranFields
	// tranDescCreatedAt is the schema descriptor for created_at field.
	tranDescCreatedAt := tranMixinFields0[0].Descriptor()
	// tran.DefaultCreatedAt holds the default value on creation for the created_at field.
	tran.DefaultCreatedAt = tranDescCreatedAt.Default.(func() uint32)
	// tranDescUpdatedAt is the schema descriptor for updated_at field.
	tranDescUpdatedAt := tranMixinFields0[1].Descriptor()
	// tran.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tran.DefaultUpdatedAt = tranDescUpdatedAt.Default.(func() uint32)
	// tran.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tran.UpdateDefaultUpdatedAt = tranDescUpdatedAt.UpdateDefault.(func() uint32)
	// tranDescDeletedAt is the schema descriptor for deleted_at field.
	tranDescDeletedAt := tranMixinFields0[2].Descriptor()
	// tran.DefaultDeletedAt holds the default value on creation for the deleted_at field.
	tran.DefaultDeletedAt = tranDescDeletedAt.Default.(func() uint32)
	// tranDescAppID is the schema descriptor for app_id field.
	tranDescAppID := tranFields[1].Descriptor()
	// tran.DefaultAppID holds the default value on creation for the app_id field.
	tran.DefaultAppID = tranDescAppID.Default.(func() uuid.UUID)
	// tranDescUserID is the schema descriptor for user_id field.
	tranDescUserID := tranFields[2].Descriptor()
	// tran.DefaultUserID holds the default value on creation for the user_id field.
	tran.DefaultUserID = tranDescUserID.Default.(func() uuid.UUID)
	// tranDescCoinTypeID is the schema descriptor for coin_type_id field.
	tranDescCoinTypeID := tranFields[3].Descriptor()
	// tran.DefaultCoinTypeID holds the default value on creation for the coin_type_id field.
	tran.DefaultCoinTypeID = tranDescCoinTypeID.Default.(func() uuid.UUID)
	// tranDescIncoming is the schema descriptor for incoming field.
	tranDescIncoming := tranFields[4].Descriptor()
	// tran.DefaultIncoming holds the default value on creation for the incoming field.
	tran.DefaultIncoming = tranDescIncoming.Default.(decimal.Decimal)
	// tranDescLocked is the schema descriptor for locked field.
	tranDescLocked := tranFields[5].Descriptor()
	// tran.DefaultLocked holds the default value on creation for the locked field.
	tran.DefaultLocked = tranDescLocked.Default.(decimal.Decimal)
	// tranDescOutcoming is the schema descriptor for outcoming field.
	tranDescOutcoming := tranFields[6].Descriptor()
	// tran.DefaultOutcoming holds the default value on creation for the outcoming field.
	tran.DefaultOutcoming = tranDescOutcoming.Default.(decimal.Decimal)
	// tranDescSpendable is the schema descriptor for spendable field.
	tranDescSpendable := tranFields[7].Descriptor()
	// tran.DefaultSpendable holds the default value on creation for the spendable field.
	tran.DefaultSpendable = tranDescSpendable.Default.(decimal.Decimal)
	// tranDescID is the schema descriptor for id field.
	tranDescID := tranFields[0].Descriptor()
	// tran.DefaultID holds the default value on creation for the id field.
	tran.DefaultID = tranDescID.Default.(func() uuid.UUID)
}

const (
	Version = "v0.11.2" // Version of ent codegen.
)
